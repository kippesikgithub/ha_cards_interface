type: custom:vertical-stack-in-card
cards:
  - type: custom:stack-in-card
    cards:
      - type: custom:mushroom-template-card
        primary: Badkamer 🚿
        secondary: >-
          🌡️{{states('sensor.badkamer_temperatuur_aqara_temperature') }}°C | 
          💧{{states('sensor.badkamer_temperatuur_aqara_humidity') | int }}%
        tap_action:
          action: navigate
          navigation_path: /dashboard-subviews/badkamer
        entity: light.bathroom
        icon: mdi:shower-head
        icon_color: blue
        fill_container: true
        layout: horizontal
        multiline_secondary: false
        card_mod:
          style: |
            ha-card {
              z-index: 1;
            }
      - type: custom:mini-graph-card
        entities:
          - entity: sensor.badkamer_temperatuur_aqara_temperature
            name: Temperature
          - entity: sensor.badkamer_temperatuur_aqara_humidity
            name: Humidity
            color: blue
            y_axis: secondary
        color_thresholds:
          - value: -20
            color: "#264CFF"
          - value: -15
            color: "#3FA0FF"
          - value: -10
            color: "#72D8FF"
          - value: -5
            color: "#AAF7FF"
          - value: 0
            color: "#E0FFFF"
          - value: 5
            color: "#FFFFBF"
          - value: 10
            color: "#FFE099"
          - value: 15
            color: "#FFAD72"
          - value: 20
            color: "#F76D5E"
          - value: 25
            color: "#D82632"
          - value: 30
            color: "#A50021"
        height: 50
        hours_to_show: 24
        line_width: 2
        font_size: 50
        animate: true
        show:
          name: false
          icon: false
          state: false
          legend: false
          fill: fade
          labels: false
          labels_secondary: false
          points: false
        card_mod:
          style: |
            ha-card {
              position: absolute !important;
              height: 100%;
              width: 100%;
              top: 0px;
              --ha-card-border-width: 0;
            }
            ha-card:after {
              content: "";
              position: absolute;
              width: 100%;
              height: 100%;
              background: linear-gradient(to right, var(--card-background-color) 20%, transparent);
            }
  - type: custom:vertical-stack-in-card
    horizontal: true
    cards:
      - type: custom:mushroom-template-card
        entity: switch.badkamer_fan_sonoff
        layout: vertical
        use_light_color: true
        icon: |-
          {% if is_state('switch.badkamer_fan_sonoff', 'on') %}
          mdi:fan
          {% else %}
          mdi:fan
          {% endif %}
        icon_color: |-
          {% if is_state('switch.badkamer_fan_sonoff', 'on') %}
            green
          {% endif %}
        tap_action:
          action: more-info
        double_tap_action:
          action: call-service
          service: input_boolean.toggle
          target:
            entity_id: input_boolean.node_red_badkamer_automations
          data: {}
        card_mod:
          style:
            mushroom-shape-icon$: >
              {% if is_state('input_boolean.node_red_badkamer_automations',
              'on') %}

              .shape {
                --shape-animation: ping 3s infinite;
              }

              @keyframes ping {
                0% {
                  box-shadow: 0 0 5px 1px rgba(var(--rgb-blue), 0.7);
                }
                
                100% {
                  box-shadow: 0 0 5px 5px transparent;
                }
              }

              {% elif is_state('input_boolean.node_red_badkamer_automations',
              'off') %}

              {% endif %}
  - type: custom:mushroom-chips-card
    chips:
      - type: template
        icon: mdi:toothbrush-electric
        icon_color: |2-
            {% if is_state(entity, 'on') %}
            green
            {% else %}
            grey
            {% endif %}
        entity: switch.badkamer_tandenborstels_sonoff
        tap_action:
          action: more-info
      - type: template
        icon: mdi:fan
        icon_color: |2-
            {% if is_state(entity, 'on') %}
            green
            {% else %}
            grey
            {% endif %}
        entity: switch.badkamer_fan_sonoff
        tap_action:
          action: more-info
      - type: template
        icon: mdi:shower-head
        icon_color: |2-
            {% if is_state(entity, 'on') %}
            blue
            {% else %}
            grey
            {% endif %}
        entity: binary_sensor.hot_tap_water
        tap_action:
          action: more-info
      - type: template
        icon: |-
          {% if is_state(entity, 'off') %}
          mdi:window-closed
          {% else %}
          mdi:window-open
          {% endif %}
        icon_color: |2-
            {% if is_state(entity, 'off') %}
            green
            {% else %}
            red
            {% endif %}
        entity: binary_sensor.badkamer_raam_aqara_contact
        tap_action:
          action: more-info
    alignment: end
    card_mod:
      style:
        mushroom-template-chip: |
          ha-card {
            --ha-card-box-shadow: none;
            --chip-background: none;
            --chip-box-shadow: none;
            --chip-spacing: 0;
            : -36px;
          } 
        mushroom-template-chip:nth-child(1)$: |
          {% if is_state('switch.badkamer_tandenborstels_sonoff','on') %}
          ha-state-icon {
            animation: charge 1s linear infinite;
          }
          @keyframes charge {
            0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100% { transform: translate(0, 0); }
            5% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            15% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            25% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            35% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            45% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            55% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            65% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            75% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            85% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
            95% { transform: translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }
          }
          }
          {% else %}

          {% endif %}
          }
        mushroom-template-chip:nth-child(2)$: |
          {% if is_state('switch.badkamer_fan_sonoff','on') %}
          ha-state-icon {
            animation: rotation 2s linear infinite;
          }
          @keyframes rotation {
            0% {
              transform: rotate(0deg);
            }
            100% {
              transform: rotate(360deg);
            }
          }
          }
          {% else %}

          {% endif %}
          }
        mushroom-template-chip:nth-child(3)$: |
          {% if is_state('binary_sensor.hot_tap_water','on') %}
          ha-state-icon {
            animation: clip 0.7s ease-out infinite;
          }
          @keyframes clip {
            0% {clip-path: inset(0 0 45% 0); }
            100% { clip-path: inset(0 0 0 0); }
          }
          }
          {% else %}

          {% endif %}
          }
