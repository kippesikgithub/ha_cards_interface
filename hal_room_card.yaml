type: custom:vertical-stack-in-card
cards:
  - type: custom:stack-in-card
    cards:
      - type: custom:mushroom-template-card
        primary: Hal
        icon: hue:room-hallway
        icon_color: teal
        layout: horizontal
        entity: light.wled_kapstok
        secondary: >-
          {{states('sensor.hal_motion_hue_temperature') }}Â°C |
          {{states('sensor.hal_motion_hue_illuminance_lux') | int }}lux
        tap_action:
          action: navigate
          navigation_path: /dashboard-subviews/hal
        badge_icon: |
          {% if is_state('binary_sensor.hal_motion_hue_occupancy', 'on') %}
            mdi:human-greeting
          {% else %}  
            mdi:motion-sensor-off
          {% endif %}
        badge_color: |
          {% if is_state('binary_sensor.hal_motion_hue_occupancy', 'on') %}
            green
          {% else %}  
            disabled
          {% endif %}
        fill_container: true
        multiline_secondary: false
        card_mod:
          style: |
            ha-card {
              z-index: 1;
            }
      - type: custom:mini-graph-card
        entities:
          - entity: sensor.hal_motion_hue_temperature
            name: Temperature
        color_thresholds:
          - value: -20
            color: "#264CFF"
          - value: -15
            color: "#3FA0FF"
          - value: -10
            color: "#72D8FF"
          - value: -5
            color: "#AAF7FF"
          - value: 0
            color: "#E0FFFF"
          - value: 5
            color: "#FFFFBF"
          - value: 10
            color: "#FFE099"
          - value: 15
            color: "#FFAD72"
          - value: 20
            color: "#F76D5E"
          - value: 25
            color: "#D82632"
          - value: 30
            color: "#A50021"
        height: 50
        hours_to_show: 24
        line_width: 2
        font_size: 50
        animate: true
        show:
          name: false
          icon: false
          state: false
          legend: false
          fill: fade
          labels: false
          labels_secondary: false
          points: false
        card_mod:
          style: |
            ha-card {
              position: absolute !important;
              height: 100%;
              width: 100%;
              top: 0px;
              --ha-card-border-width: 0;
            }
            ha-card:after {
              content: "";
              position: absolute;
              width: 100%;
              height: 100%;
              background: linear-gradient(to right, var(--card-background-color) 20%, transparent);
            }
  - type: custom:vertical-stack-in-card
    mode: vertical
    cards:
      - type: custom:vertical-stack-in-card
        horizontal: true
        cards:
          - type: custom:mushroom-template-card
            entity: light.shellydim_voordeurlamp
            layout: vertical
            icon: |-
              {% if is_state('light.shellydim_voordeurlamp', 'on') %}
              hue:ceiling-being
              {% else %}
              hue:ceiling-being
              {% endif %}
            icon_color: |-
              {% if is_state('light.shellydim_voordeurlamp', 'on') %}
                yellow
              {% endif %}
            double_tap_action:
              action: call-service
              service: input_boolean.toggle
              target:
                entity_id: input_boolean.node_red_voordeurlamp_automations
              data: {}
            card_mod:
              style:
                mushroom-shape-icon$: >
                  {% if
                  is_state('input_boolean.node_red_voordeurlamp_automations',
                  'on') %}

                  .shape {
                    --shape-animation: ping 3s infinite;
                  }

                  @keyframes ping {
                    0% {
                      box-shadow: 0 0 5px 1px rgba(var(--rgb-blue), 0.7);
                    }
                    
                    100% {
                      box-shadow: 0 0 5px 5px transparent;
                    }
                  }

                  {% elif
                  is_state('input_boolean.node_red_voordeurlamp_automations',
                  'off') %}

                  {% endif %}
          - type: custom:mushroom-template-card
            entity: light.shellyrgbw_kapstok
            layout: vertical
            icon: |-
              {% if is_state('light.shellyrgbw_kapstok', 'on') %}
              hue:room-hallway
              {% else %}
              hue:room-hallway
              {% endif %}
            icon_color: |-
              {% if is_state('light.shellyrgbw_kapstok', 'on') %}
                yellow
              {% endif %}
            double_tap_action:
              action: call-service
              service: input_boolean.toggle
              target:
                entity_id: input_boolean.node_red_hal_automations
              data: {}
            card_mod:
              style:
                mushroom-shape-icon$: >
                  {% if is_state('input_boolean.node_red_hal_automations', 'on')
                  %}

                  .shape {
                    --shape-animation: ping 3s infinite;
                  }

                  @keyframes ping {
                    0% {
                      box-shadow: 0 0 5px 1px rgba(var(--rgb-blue), 0.7);
                    }
                    
                    100% {
                      box-shadow: 0 0 5px 5px transparent;
                    }
                  }

                  {% elif is_state('input_boolean.node_red_hal_automations',
                  'off') %}

                  {% endif %}
      - type: custom:mushroom-chips-card
        chips:
          - type: conditional
            conditions:
              - entity: binary_sensor.voordeur_ding
                state: "on"
            chip:
              type: entity
              icon: mdi:bell-ring
              icon_color: indigo
              entity: binary_sensor.voordeur_ding
              tap_action:
                action: more-info
          - type: template
            icon: mdi:smoke
            icon_color: |2-
                {% if is_state(entity, 'on') %}
                red
                {% else %}
                grey
                {% endif %}
            entity: binary_sensor.rookmelder_bg_gang_kaku_smoke
            tap_action:
              action: more-info
          - type: template
            icon: mdi:motion-sensor
            icon_color: |2-
                {% if is_state(entity, 'on') %}
                blue
                {% else %}
                grey
                {% endif %}
            entity: binary_sensor.hal_motion_hue_occupancy
            tap_action:
              action: more-info
          - type: template
            icon: mdi:doorbell-video
            icon_color: |2-
                {% if is_state(entity, 'on') %}
                blue
                {% else %}
                disabled
                {% endif %}
            entity: binary_sensor.voordeur_ding
            tap_action:
              action: navigate
              navigation_path: /dashboard-subviews/deurbel
          - type: template
            icon: |-
              {% if is_state(entity, 'off') %}
              mdi:bell-remove-outline
              {% else %}
              mdi:bell-check-outline
              {% endif %}
            icon_color: |2-
                {% if is_state(entity, 'on') %}
                green
                {% else %}
                red
                {% endif %}
            entity: input_boolean.node_red_deurbel_automations
            tap_action:
              action: more-info
        alignment: end
        card_mod:
          style:
            mushroom-template-chip: |
              ha-card {
                --ha-card-box-shadow: none;
                --chip-background: none;
                --chip-box-shadow: none;
                --chip-spacing: 0;
                : -36px;
              } 
            mushroom-template-chip:nth-child(1)$: |
              {% if is_state('binary_sensor.voordeur_ding','on') %}
              ha-state-icon {
                animation: ring 4s linear infinite;
                transform-origin: 50% 15%;
              }
              @keyframes ring {
                0% { transform: rotate(0); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                2% { transform: rotate(30deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                6% { transform: rotate(-28deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                10% { transform: rotate(34deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                14% { transform: rotate(-32deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                18% { transform: rotate(30deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                22% { transform: rotate(-28deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                26% { transform: rotate(26deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                30% { transform: rotate(-24deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                34% { transform: rotate(22deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                38% { transform: rotate(-20deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                42% { transform: rotate(18deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                46% { transform: rotate(-16deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                50% { transform: rotate(14deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                54% { transform: rotate(-12deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                58% { transform: rotate(10deg); clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%); }
                62% { transform: rotate(-8deg); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
                66% { transform: rotate(6deg); }
                70% { transform: rotate(-4deg); }
                74% { transform: rotate(2deg); }
                78% { transform: rotate(-1deg); }
                82% { transform: rotate(1deg); }
                86% { transform: rotate(0); }
                100% { transform: rotate(0); clip-path: polygon(0 50%, 0 100%, 100% 100%, 100% 50%, 85% 50%, 80% 30%, 60% 5%, 40% 5%, 20% 30%, 15% 50%); }
              }
              }
              {% else %}

              {% endif %}
              }
            mushroom-template-chip:nth-child(2)$: >
              {% if is_state('binary_sensor.rookmelder_bg_gang_kaku_smoke','on')
              %}

              ha-state-icon {
                animation: clip 2s linear infinite;
              }

              @keyframes clip {
                50% { clip-path: polygon(0 0, 55% 0, 100% 100%, 0 100%); }
              }

              .shape {
                --shape-animation: motion 2s linear infinite;
              }

              @keyframes motion {
                0%, 100% { --shape-color: rgba(var(--rgb-blue), 0.3); }
                50% { --shape-color: rgba(var(--rgb-blue), 0.2); }
              }

              }

              {% else %} {% endif %} }
            mushroom-template-chip:nth-child(3)$: |
              {% if is_state('binary_sensor.hal_motion_hue_occupancy','on') %}
              ha-state-icon {
                animation: clip 2s linear infinite;
              }
              @keyframes clip {
                50% { clip-path: polygon(0 0, 55% 0, 100% 100%, 0 100%); }
              }
              .shape {
                --shape-animation: motion 2s linear infinite;
              }
              @keyframes motion {
                0%, 100% { --shape-color: rgba(var(--rgb-blue), 0.3); }
                50% { --shape-color: rgba(var(--rgb-blue), 0.2); }
              }
              }
              {% else %}

              {% endif %}
              }
